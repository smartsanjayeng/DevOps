plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'maven-publish'
}

group = 'com.devops.shopping'

// === Version Handling ===

// Ensure version.txt exists
def versionFile = file('version.txt')
if (!versionFile.exists()) {
    println "‚ö†Ô∏è version.txt not found. Creating default version 1.0.0-SNAPSHOT"
    versionFile.text = '1.0.0-SNAPSHOT'
}

def versionText = versionFile.text.trim()
version = versionText

println "üß© Current Project Version: ${version}"

// Dynamic repository type (default SNAPSHOT)
def repositoryType = project.hasProperty('repositoryType') ? project.repositoryType : (version.contains('SNAPSHOT') ? 'snapshots' : 'releases')
println "üì¶ Repository Type: ${repositoryType}"

// === Java Version ===
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

// === Dependencies ===
repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.4.3'
    implementation 'org.springframework.boot:spring-boot-starter-web:3.4.3'
    runtimeOnly 'com.mysql:mysql-connector-j'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.4.3'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.8.2'
}

tasks.named('test') {
    useJUnitPlatform()
}

// === Increment Version Task ===
task incrementVersion {
    doLast {
        println 'üî¢ Incrementing project version...'
        def parts = versionText.tokenize('.')
        def patchPart = parts[-1].replaceAll("-SNAPSHOT", "").toInteger() + 1
        def isSnapshot = repositoryType == 'snapshots'
        def newVersion = "${parts[0]}.${parts[1]}.${patchPart}${isSnapshot ? '-SNAPSHOT' : ''}"
        versionFile.text = newVersion
        println "‚úÖ New Version Written: ${newVersion}"
    }
}

// === Git Tagging Task ===
task gitTag {
    doLast {
        println "üè∑Ô∏è Creating Git tag for version: ${version}"
        exec {
            commandLine 'git', 'tag', version
        }
        exec {
            commandLine 'git', 'push', 'origin', version
        }
    }
}

// === Publishing Configuration ===
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId = 'com.devops.shopping'
            artifactId = 'shopping-app'
            version = project.version
        }
    }

    repositories {
        maven {
            name = "Nexus"
            url = uri("http://localhost:9090/repository/maven-${repositoryType}/")
            allowInsecureProtocol = true
            credentials {
                username = project.findProperty("nexusUsername") ?: System.getenv("NEXUS_USERNAME")
                password = project.findProperty("nexusPassword") ?: System.getenv("NEXUS_PASSWORD")
            }
        }
    }
}
